(require 'ert)
(require 'cl-lib)

(ert-deftest clos-test ()
  (should (and (cl-defmethod clos-test-t ((a t) b) "" t)
               (clos-test-t 'any 1)))
  (should (and (cl-defmethod clos-test-type ((a number) b) "" t)
               (clos-test-type 1 1)))
  (should (and (cl-defmethod clos-test-type ((a string) b) "" t)
               (clos-test-type "1" 1)))
  (should (and (cl-defmethod clos-test-type ((a symbol) b) "" t)
               (clos-test-type 'x 1)))
  (should (and (cl-defmethod clos-test-head ((_ (head or)) b) "" t)
               (clos-test-head '(or 1 2) 1)))
  (should (and (cl-defmethod clos-test-eql ((_ (eql and)) b) "" t)
               (clos-test-eql 'and 1)))
  (should (and (cl-defmethod clos-test-major-mode
                 ((_ (derived-mode prog-mode)) b) "" t)
               (clos-test-major-mode 'emacs-lisp-mode 1))))

(ert 'clos-test)
